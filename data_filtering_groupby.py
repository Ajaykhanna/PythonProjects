# -*- coding: utf-8 -*-
"""
Created on Tuesday April 08 2025
@author: Ajay Khanna
Place: Los Alamos, New Mexico, USA
Description: This script filters a dataset to keep only the rows with the minimum Y value for each unique X value.

"""
import pandas as pd
import io

# Given dataset as a string
data_str = """
# Scan of Total Energy
# X-Axis:  Scan Coordinate
# Y-Axis:  Total Energy (Hartree)
#                  X                   Y
      180.0000000000     -724.6337810930
      182.0000000000     -724.6337701010
      182.0000000000     -724.6337751960
      182.0000000000     -724.6337528180
      182.0000000000     -724.6337759360
      182.0000000000     -724.6337759500
      182.0000000000     -724.6337763390
      182.0000000000     -724.6337763320
      182.0000000000     -724.6337763770
      184.0000000000     -724.6337559020
      184.0000000000     -724.6337609910
      184.0000000000     -724.6337595950
      184.0000000000     -724.6337603850
      184.0000000000     -724.6337619200
      184.0000000000     -724.6337621550
      186.0000000000     -724.6337318980
      186.0000000000     -724.6337379810
      186.0000000000     -724.6337381020
      186.0000000000     -724.6337381320
      188.0000000000     -724.6336977290
      188.0000000000     -724.6337038010
      188.0000000000     -724.6337038330
      190.0000000000     -724.6336527210
      190.0000000000     -724.6336587380
      192.0000000000     -724.6335961300
      192.0000000000     -724.6336020300
      194.0000000000     -724.6335271380
      194.0000000000     -724.6335328970
      196.0000000000     -724.6334448330
      196.0000000000     -724.6334504390
      198.0000000000     -724.6333482840
      198.0000000000     -724.6333537260
      200.0000000000     -724.6332365730
      200.0000000000     -724.6332418450
      202.0000000000     -724.6331088330
      202.0000000000     -724.6331139320
      204.0000000000     -724.6329642830
      204.0000000000     -724.6329692120
      206.0000000000     -724.6328022620
      206.0000000000     -724.6328070260
      208.0000000000     -724.6326222520
      208.0000000000     -724.6326268610
      210.0000000000     -724.6324239070
      210.0000000000     -724.6324283750
      212.0000000000     -724.6322070720
      212.0000000000     -724.6322114190
      214.0000000000     -724.6319718060
      214.0000000000     -724.6319760570
      216.0000000000     -724.6317183990
      216.0000000000     -724.6317225800
      218.0000000000     -724.6314473730
      218.0000000000     -724.6314515140
      220.0000000000     -724.6311594980
      220.0000000000     -724.6311636350
      222.0000000000     -724.6308558050
      222.0000000000     -724.6308599720
      224.0000000000     -724.6305375820
      224.0000000000     -724.6305418210
      226.0000000000     -724.6302063800
      226.0000000000     -724.6302107330
      228.0000000000     -724.6298640020
      228.0000000000     -724.6298685130
      230.0000000000     -724.6295124840
      230.0000000000     -724.6295171970
      232.0000000000     -724.6291540820
      232.0000000000     -724.6291590390
      234.0000000000     -724.6287912370
      234.0000000000     -724.6287964780
      236.0000000000     -724.6284265460
      236.0000000000     -724.6284321070
      238.0000000000     -724.6280627380
      238.0000000000     -724.6280686500
      240.0000000000     -724.6277026360
      240.0000000000     -724.6277089270
      242.0000000000     -724.6273491270
      242.0000000000     -724.6273558170
      244.0000000000     -724.6270050990
      244.0000000000     -724.6270122000
      246.0000000000     -724.6266733880
      246.0000000000     -724.6266808970
      248.0000000000     -724.6263566860
      248.0000000000     -724.6263645840
      250.0000000000     -724.6260574810
      250.0000000000     -724.6260657430
      252.0000000000     -724.6257780630
      252.0000000000     -724.6257866690
      254.0000000000     -724.6255205590
      254.0000000000     -724.6255294890
      256.0000000000     -724.6252869000
      256.0000000000     -724.6252961180
      258.0000000000     -724.6250787340
      258.0000000000     -724.6250881870
      260.0000000000     -724.6248973700
      260.0000000000     -724.6249070100
      262.0000000000     -724.6247438280
      262.0000000000     -724.6247536250
      264.0000000000     -724.6246188930
      264.0000000000     -724.6246288150
      266.0000000000     -724.6245230600
      266.0000000000     -724.6245330640
      268.0000000000     -724.6244564900
      268.0000000000     -724.6244665320
      270.0000000000     -724.6244190060
      270.0000000000     -724.6244290420
      272.0000000000     -724.6244101230
      272.0000000000     -724.6244201100
      274.0000000000     -724.6244290150
      274.0000000000     -724.6244388950
      276.0000000000     -724.6244744810
      276.0000000000     -724.6244842280
"""

# Read the data into a pandas DataFrame
data = pd.read_csv(io.StringIO(data_str), sep=r"\s+", skiprows=3)

# Group by 'X' and keep the row with the minimum 'Y'
filtered_data = data.loc[data.groupby("X")["Y"].idxmin()]

# Save the filtered data
# Frequency of X, X, Y
filtered_data.to_csv("filtered_data.csv")
